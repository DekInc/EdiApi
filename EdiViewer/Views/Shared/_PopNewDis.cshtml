<div class="modal fade2" id="modalPopNewDis" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel2" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-xl" role="document">
        <div class="modal-content modal-content-normal">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel2"></h5>
            </div>
            <div class="modal-body">
                <div id="divMensajePop2">
                    <p>Por favor confirme los productos del pedido y la fecha del mismo</p>
                    <p>
                        <label class="label" for="dtp2">Fecha y hora esperada</label><br />
                        <input class="form-control datepicker" data-link-format="dd/mm/yyyy hh:ii" id="dtp2" maxlength="19" value="@(ViewBag.DateLastDis == null? string.Empty : ViewBag.DateLastDis)" />
                    </p>
                    <div class="container" id="divList">
                        <div id="gridPedidoDet" style="min-height: 460px; width: 100%;"></div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <div class="container text-center">
                    @*<button type="button" class="btn btn-secondary" id="btnSaveDis">Guardar</button>*@
                    <button type="button" class="btn btn-success" id="btnSendDis">Enviar</button>
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cerrar</button>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    var domtblPedidos = null;
    var gridPedidoDet = null;
    function refreshGrid(auto) {
        w2ui.grid.autoLoad = auto;
        w2ui.grid.skip(0);
    }
    function crearGridDet() {
        var config = {
            grid: {
                name: 'gridPedidoDet',
                selectType: 'cell',
                bResponsive: true,
                bMobile: window.mobileAndTabletcheck(),
                records: mainGrid.allRecords.filter(R => R.cantPedir != 0),
                show: {
                    footer: true,
                    toolbar: true,
                    expandColumn: window.mobileAndTabletcheck(),
                    toolbarInput: false
                },
                searches: [
                    { field: "barcode", caption: "Cod. caja", type: 'text' },
                    //{ field: "producto", caption: "Lote", type: 'text' },
                    { field: "talla", caption: "Talla", type: 'text' },
                    //{ field: "lote", caption: "Estilo", type: 'text' },
                    { field: "categoria", caption: "Genero", type: 'text' },
                    { field: "departamento", caption: "departamento", type: 'text' },
                    { field: "cp", caption: "cp", type: 'text' },
                    { field: "transporte", caption: "Transporte", type: 'text' }
                ],
                colShowResponsive: [
                    { field: 'barcode' },
                    { field: 'cantPedir' }
                ],
                columns: [
                    { field: "id", caption: "id", sortable: true, hidden: true },
                    { field: "transporte", caption: "Transporte", type: 'text' },
                    { field: "barcode", caption: "Cod. caja", type: 'text', sortable: true },
                    //{ field: "producto", caption: "Lote", type: 'text' },
                    { field: "talla", caption: "talla", type: 'text' },
                    { field: "categoria", caption: "Genero", type: 'text', sortable: true },
                    //{ field: "lote", caption: "estilo", type: 'text' },
                    { field: "cantPedir", caption: "Cantidad a pedir", sortable: true },
                    { field: "departamento", caption: "departamento", type: 'text' },
                    { field: "cp", caption: "cp", type: 'text', sortable: true }
                ]
            }
        };
        gridPedidoDet = $('#gridPedidoDet').w2grid(config.grid);
        arrayGrids['gridPedidoDet'] = gridPedidoDet;
    }
    function SaveSendDis(actionUrl, op1) {
        if (mainGrid == null)
            return;
        if (mainGrid.allRecords == null)
            return;
        if (mainGrid.allRecords.length == 0)
            return;
        if (mainGrid.allRecords.filter(Pr => Pr.cantPedir != 0).length == 0)
            return;
        if ($('#dtp2').val() == '') {
            //ModalPopNewDis.hide();
            menErrorEdi('La fecha está vacia', 'Error');
            return;
        } else {
            var checkDate = null;
            funcbtnOkMessageBox = function () {
                var regSend = mainGrid.allRecords.filter(Pr => Pr.cantPedir != 0);
                $.each(regSend, function (i, Pr) {
                    Pr.dateProm = $('#dtp2').val();
                });
                $.ajax({
                    method: "POST",
                    contentType: "application/json; charset=utf-8",
                    dataType: "JSON",
                    url: actionUrl,
                    data: JSON.stringify(regSend),
                    success: function (json) {
                        funcbtnOkMessageBox = function () { }
                        if (json.codError != 0)
                            menErrorEdi(json.mensaje, 'Error');
                        else {
                            if (op1 == 1) {
                                miAlive();
                                mainGrid.allRecords = [];
                                $('#divSpinFiltrar').show();
                                mainGrid.searchReset(true);
                                mainGrid.reload2("@this.Url.Action("GetPaylessProdPrioriInventario", "Grids")?dtpPeriodoBuscar=" + $('#cboPeriod').val());
                                menErrorEdi('Se ha guardado el pedido para ser modificado después, el pedido no ha sido enviado a GLC.', 'Mensaje de aplicativo');
                            }
                            if (op1 == 2) {
                                //Redirect a lista de pedidos
                                location.href = '@this.Url.Action("Peticiones", "HomeExtern")';
                            }
                        }
                    },
                    error: function (json) {
                        menErrorEdi(json.mensaje, 'Error interno de la petición de JS');
                    }
                });
            }
            if (mainGrid.pedidosPendientes != null) {
                if (mainGrid.pedidosPendientes.length != 0) {
                    checkDate = mainGrid.pedidosPendientes.filter(O => O.fechaPedido.substr(0, 10) == $('#dtp2').val());
                    if (checkDate) {
                        if (checkDate.length > 0) {
                            menErrorEdi('Ya existe un pedido para esa fecha de entrega.', 'Error');
                            return;
                        } else {
                            funcbtnOkMessageBox();
                        }
                    }
                }
            }            
            if (checkDate == null)
                funcbtnOkMessageBox();
        }
    }
    $('#btnSaveDis').on('click', function () {
        SaveSendDis('@this.Url.Action("SetPedidoExterno", "HomeExtern")?cboPeriod=' + $('#cboPeriod').val(), 1);
    });
    $('#btnSendDis').on('click', function () {
        SaveSendDis('@this.Url.Action("SendPedidoExterno", "HomeExtern")?cboPeriod=' + $('#cboPeriod').val(), 2);
    });
    $(document).ready(function () {
        $('#dtp2').datetimepicker({ format: 'dd/mm/yyyy hh:ii' });
    });
</script>